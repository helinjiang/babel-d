{"version":3,"sources":["../src/index.js"],"names":["run","fs","require","path","_","srcPath","outPath","options"],"mappings":";;;kBAgDwBA,G;;AA5CxB;;AAJA,IAAMC,KAAKC,QAAQ,IAAR,CAAX;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;;AAEA,IAAME,IAAIF,QAAQ,QAAR,CAAV;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,SAASF,GAAT,CAAaK,OAAb,EAAsBC,OAAtB,EAA6C;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AACxD,+BAAQF,OAAR,EAAiBC,OAAjB;AACH;;AAED;AACA;AACA","file":"index.js","sourcesContent":["const fs = require('fs');\nconst path = require('path');\n\nconst _ = require('lodash');\nimport { compile } from './babel-compile';\n\n// const Compile = require('./compile');\n//\n// const rootPath = path.dirname(__dirname);\n//\n// const globalOpts = {\n//     APP_PATH: rootPath + path.sep + 'app',\n//     RUNTIME_PATH: rootPath + path.sep + 'runtime',\n//     ROOT_PATH: rootPath,\n//     RESOURCE_PATH: __dirname,\n//     UPLOAD_PATH: path.join(__dirname, 'static/upload'),\n//     env: 'development',\n//\n// };\n\n// export default function compile(srcPath, outPath, options = {}) {\n//     if (_.isPlainObject(srcPath)) {\n//         options = srcPath;\n//         srcPath = '';\n//     } else if (srcPath === true) {\n//         options = { log: true };\n//         srcPath = '';\n//     }\n//\n//     // 源代码的文件夹路径\n//     srcPath = srcPath || path.join(globalOpts.ROOT_PATH, 'src');\n//\n//     // 如果源代码的文件夹路径地址不是文件，则直接返回不处理了。\n//     if (!isDirectory(srcPath)) {\n//         console.error(`${srcPath} is not directory!`);\n//         return;\n//     }\n//\n//     // 编译后的文件夹路径\n//     outPath = outPath || globalOpts.APP_PATH;\n//\n//     let instance = new Compile(srcPath, outPath, options, (changedFiles) => {\n//         console.log('compileCallback', changedFiles)\n//     });\n//\n//     instance.run();\n// }\n\nexport default function run(srcPath, outPath, options = {}) {\n    compile(srcPath, outPath);\n}\n\n// function isDirectory(paths) {\n//     return fs.lstatSync(paths).isDirectory();\n// }\n"]}